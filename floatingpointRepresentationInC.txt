#include <stdio.h>
#include <string.h>

union float_bits {
    float f;
    unsigned int bits;
};

void print_float_bits(float f) {
    union float_bits u;
    u.f = f;
    unsigned int bits = u.bits;
    int i;

    for (i = sizeof(float) * 8 - 1; i >= 0; i--) {
        printf("%d", (bits >> i) & 1);
    }
    printf("\n");
}

int main() {
    float num = 3.14159;
    print_float_bits(num);
    return 0;
}



In this example, we define a union called float_bits that has two members: a float called f, and an unsigned int called bits. We use memcpy to copy the bits of a floating-point number into the bits member of the union. Then, we use a loop to iterate over the bits of the bits member and print them one at a time. The loop starts at the most significant bit and ends at the least significant bit.

You can also use (*(unsigned int*)&f) instead of using memcpy to access the bit representation of a float, it's a C-specific trick to reinterpret the memory of a float as an unsigned int, then you could print the bits using a for loop, shifting and using & operator

Note that, the output will not be in the order of IEEE 754 standard encoding format, it will give the bit representation of the number as its stored in memory.















#include <stdio.h>

union float_bits {
    float f;
    unsigned int i;
};

int main(void) {
    union float_bits num;
    num.f = 3.14;
    unsigned int *p = &num.i;
    for (int i = sizeof(num.i) - 1; i >= 0; i--) {
        for (int j = 7; j >= 0; j--) {
            printf("%u", (*(p + i) >> j) & 1);
        }
    }
    printf("\n");
    return 0;
}




In C programming, you can show the bit-level representation of a floating-point number by using a union data structure and a character pointer. A union is a special type of data structure that allows you to store different data types in the same memory location, and a character pointer can be used to access the individual bytes of the memory location.

Here is an example of how you can use a union to show the bit-level representation of a floating-point number in C:




